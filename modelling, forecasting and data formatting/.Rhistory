installed.packages("swirl")
library("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
5 + 7
newStr<-"Hello wolrd"
print(newStr)
v <- TRUE
print(V)
print(v)
newStr<-"Hello wolrd"
print(newStr)
v <- TRUE
print(v)
s<- "hello"
print(s)
print(class(s))
apple <- c('red','green',"yellow")
print(apple)
apple <- c('red','green',"yellow")
print(apple)
Basic syntx.R
Basic syntax.R
Rscript Basic syntax.R
Rscript "Basic syntax.R"
apple <- c('red','green',"yellow")
print(apple)
apple <- c('red','green',1)
apple <- c('red','green',1)
print(apple)
print(class(apple))
print(class(list1))
list1 <- list(c(2,5,3),21.3,sin)
print(list1)
print(class(list1))
library(swirl)
swirl()
5+7
BMI <- 	data.frame(
gender = c("Male", "Male","Female"),
height = c(152, 171.5, 165),
weight = c(81,93, 78),
Age = c(42,38,26)
)
print(BMI)
x
z
quit
exit
q
q!
quit!
BMI <- 	data.frame(
gender = c("Male", "Male","Female"),
height = c(152, 171.5, 165),
weight = c(81,93, 78),
Age = c(42,38,26)
)
print(BMI)
info()
bye()
BMI <- 	data.frame(
gender = c("Male", "Male","Female"),
height = c(152, 171.5, 165),
weight = c(81,93, 78),
Age = c(42,38,26)
)
print(BMI)
source('C:/Users/me/Desktop/big data/Basic syntax.R')
source('C:/Users/me/Desktop/big data/Basic syntax.R')
source('C:/Users/me/Desktop/big data/Basic syntax.R')
source('C:/Users/me/Desktop/big data/Basic syntax.R')
source('C:/Users/me/Desktop/big data/Basic syntax.R')
source('C:/Users/me/Desktop/big data/Basic syntax.R')
source('C:/Users/me/Desktop/big data/Basic syntax.R')
source('C:/Users/me/Desktop/big data/Basic syntax.R')
a <-c(2,3,4)
b <-c(3,4)
c= a*b
print(c)
a <-c(2,3,4)
b <-c(3,4)
c= a*b
print(c)
source('C:/Users/me/Desktop/big data/Basic syntax.R')
setwd("C:/Users/me/Desktop/analyzing time series data")
source('C:/Users/me/Desktop/analyzing time series data/time_series_forcasting.R')
source('C:/Users/me/Desktop/analyzing time series data/time_series_forcasting.R')
source('C:/Users/me/Desktop/analyzing time series data/time_series_forcasting.R')
source('C:/Users/me/Desktop/analyzing time series data/time_series_forcasting.R')
monthly_milk <- read.csv("monthly_milk.csv")
daily_milk <- read.csv("daily_milk.csv")
head(monthly_milk)
class(monthly_milk)
class(monthly_milk$month)
source('C:/Users/me/Desktop/analyzing time series data/time_series_forcasting.R')
monthly_milk <- read.csv("monthly_milk.csv")
daily_milk <- read.csv("daily_milk.csv")
head(monthly_milk)
class(monthly_milk)
class(monthly_milk$month)
source('C:/Users/me/Desktop/analyzing time series data/time_series_forcasting.R', echo=TRUE)
source('C:/Users/me/Desktop/analyzing time series data/time_series_forcasting.R', echo=TRUE)
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%Y-%m-%d")
class((monthly_milk$month))
monthly_milk$month
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%Y-%B-%d")
monthly_milk$month
# coerce the month column to date class
monthly_milk$month <- (monthly_milk$month,format="%Y-%B-%d")
monthly_milk$month
monthly_milk$month <- format(monthly_milk$month,format="%Y-%B-%d")
monthly_milk$month
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%m-%d-%Y")
monthly_milk$month
monthly_milk <- read.csv("monthly_milk.csv")
daily_milk <- read.csv("daily_milk.csv")
head(monthly_milk)
class(monthly_milk)
class(monthly_milk$month)
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%m-%d-%Y")
monthly_milk$month
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%Y-%m-%d")
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%Y-%m-%d")
monthly_milk$month
monthly_milk <- read.csv("monthly_milk.csv")
daily_milk <- read.csv("daily_milk.csv")
head(monthly_milk)
class(monthly_milk)
class(monthly_milk$month)
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%Y-%m-%d")
monthly_milk$month
monthly_milk <- read.csv("monthly_milk.csv")
daily_milk <- read.csv("daily_milk.csv")
head(monthly_milk)
class(monthly_milk)
class(monthly_milk$month)
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%m-%d-%Y")
monthly_milk$month
monthly_milk <- read.csv("monthly_milk.csv")
daily_milk <- read.csv("daily_milk.csv")
head(monthly_milk)
class(monthly_milk)
class(monthly_milk$month)
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%m/%d/%Y")
monthly_milk$month
monthly_milk <- read.csv("monthly_milk.csv")
daily_milk <- read.csv("daily_milk.csv")
head(monthly_milk)
class(monthly_milk)
class(monthly_milk$month)
# coerce the month column to date class
monthly_milk$month <- as.Date(monthly_milk$month,format="%Y-%m-%d")
monthly_milk$month
head(daily_milk)
class(daily_milk$date_time)
daily_milk$date_time_posix <- as.POSIXct(daily_milk$date_time,format="%Y-%m-%d %H:%M:%S")
class(daily_milk$date_time_posix)
head(daily_milk$date_time_posix)
#create bad format date column
monthly_milk$bad_date <- format(monthly_milk$month, format = "%d/%b/%Y-%u")
head(monthly_milk$bad_date)
class(monthly_milk$bad_date)
timeplot<- ggplot(monthly_milk,aes(x=month,y=milk_prod_per_cow_kg))+geom_line()+scale_x_date(date_labels="%Y",date_breaks="1 year")+theme_classic()
library(ggplot2)
timeplot<- ggplot(monthly_milk,aes(x=month,y=milk_prod_per_cow_kg))+geom_line()+scale_x_date(date_labels="%Y",date_breaks="1 year")+theme_classic()
timeplot
timeplot
timeplot<- ggplot(monthly_milk,aes(x=month,y=milk_prod_per_cow_kg))+geom_line()+scale_x_date(date_labels="%m",date_breaks="1 year")+theme_classic()
timeplot
monthly_milk$month
timeplot<- ggplot(monthly_milk,aes(x=month,y=milk_prod_per_cow_kg))+geom_line()+scale_x_date(date_labels="%m-%d",date_breaks="1 year")+theme_classic()
timeplot
(timeplot2 <- ggplot(daily_milk,aes(x=date_time_posix,y=milk_prod_per_cow_kg))+geom_line()+scale_x_datetime(date_labels="%p-%d",date_breaks = "36 hour")+theme_classic())
#decomposition
(decomp_1 <- ggplot(monthly_milk, aes(x = month_date, y = milk_prod_per_cow_kg)) +
geom_line() +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
theme_classic())
#decomposition
(decomp_1 <- ggplot(monthly_milk, aes(x = month, y = milk_prod_per_cow_kg)) +
geom_line() +
scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
theme_classic())
(decomp_2 <- ggplot(monthly_milk, aes(x = month_date, y = milk_prod_per_cow_kg)) +
geom_line() +
geom_smooth(method = "loess", se = FALSE, span = 0.6) +
theme_classic())
(decomp_2 <- ggplot(monthly_milk, aes(x = month, y = milk_prod_per_cow_kg)) +
geom_line() +
geom_smooth(method = "loess", se = FALSE, span = 0.6) +
theme_classic())
